#!/bin/bash
# Script: rc/anyhooksencrypt
# Author: Ricardo Malnati
# Creation Date: 2023-10-15
# Description: Generates .anyhooksopenai.enc file for storing OpenAI API Key
# Dependencies: curl, openssl, rc/anyhooksdisplaymsg

# Function to configure OpenAI API Key
configure_openai_api_key() {
    display_debug_message "rc/anyhooksencrypt Entering configure_openai_api_key function"

    # OS-agnostic home directory
    local home_user_dir=$(eval echo ~$USER)

    # Determine the target directory based on the flag
    local target_dir=""

    # The project directory using Git setup info
    git_project_directory=""

    local api_key=""
    local retry_count=0
    local max_retries=3

    local api_request=""
    local passphrase=""

    case "$SCOPE" in
        "-g" | "--global")
            target_dir=$home_user_dir
            ;;
        "-l" | "--local")
            # Get the project directory using Git setup info
            git_project_directory=$(cd $3 && git rev-parse --show-toplevel)
            if [ $? -eq 0 ]; then
                display_log_message "Git Project directory found [$git_project_directory]"
            else
                display_error_message 'rc/anyhooksencrypt Unable to find the .git directory by $(cd $3 && git rev-parse --show-toplevel)'
                exit 1002
            fi
            target_dir=$git_project_directory
            ;;
            *)
            display_error_message "Invalid scope. [$SCOPE]"
            exit 1016
            ;;
    esac

    echo "Please enter your OpenAI API key:"
    read -s api_key

    while [ $retry_count -lt $max_retries ]; do
        api_request=$(curl -s -o /dev/null -w "%{http_code}" -H "Authorization: Bearer $api_key" "https://api.openai.com/v1/engines")
        if [ "$api_request" -eq 200 ]; then
            break
        else
            display_error_message "rc/anyhooksencrypt Invalid API Key. You have $((max_retries - retry_count)) attempts left."
            read -s -p "Please re-enter your OpenAI API key: " api_key
            ((retry_count++))
        fi
    done

    if [ $retry_count -eq $max_retries ]; then
        display_error_message "rc/anyhooksencrypt Max retries reached for API Key validation."
        exit 1
    fi

    passphrase=$(openssl rand -hex 16 | shasum -a 256 | awk '{print $1}')

    echo -n "$api_key" | openssl enc -aes-256-cbc -pbkdf2 -out "$target_dir/.anyhooksopenai.enc" -pass pass:$passphrase
    display_debug_message "rc/anyhooksencrypt Exiting configure_openai_api_key function"
}

configure_openai_api_key