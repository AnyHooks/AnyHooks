#!/bin/bash
# Script: rc/anyhooksencrypt
# Author: Ricardo Malnati
# Creation Date: 2023-10-15
# Description: Generates .anyhooksopenai.enc file for storing OpenAI API Key
# Dependencies: curl, openssl, rc/anyhooksdisplaymsg

# Function to configure OpenAI API Key
configure_openai_api_key() {
    echoDebugMsg ${ANYHOOKS_DEBUG_MODE} "Entering ${FUNCNAME[0]} ${@}"
    # Determine the target directory based on the flag
    local target_dir="$1"
    validateRequiredDirectoryExistence "${target_dir}"
    local retry_count=0
    local max_retries=3
    local opeAIAPIKey=""
    echo "ðŸ”’ Please enter your OpenAI API key:"
    read -s opeAIAPIKey
    while [ $retry_count -lt $max_retries ]; do
        local api_request=$(curl -s -o /dev/null -w "%{http_code}" -H "Authorization: Bearer ${opeAIAPIKey}" "https://api.openai.com/v1/engines")
        if [ "${api_request}" -eq 200 ]; then
            break
        else
            echoWarningMsg "${FUNCNAME[0]} Invalid API Key. You have $((max_retries - retry_count)) attempts left."
            echo "ðŸ”’ Please re-enter your OpenAI API key:"
            read -s opeAIAPIKey
            ((retry_count++))
        fi
    done
    if [ $retry_count -eq $max_retries ]; then
        echoErrorMsg "${FUNCNAME[0]} Max retries reached for API Key validation."
    fi
    local passphrase=$(openssl rand -hex 16 | shasum -a 256 | awk '{print $1}')
    echo -n "${opeAIAPIKey}" | openssl enc -aes-256-cbc -pbkdf2 -out "${target_dir}/.anyhooksopenai.enc" -pass pass:${passphrase}
    if [ $? -eq 0 ]; then
        echoLogMsg "API keys encrypted successfully."
    else
        echoErrorMsg "Unable to encrypt API keys. Please verify your encryption parameters."
    fi
    echoDebugMsg ${ANYHOOKS_DEBUG_MODE} "Exiting ${FUNCNAME[0]} ${@}"
}